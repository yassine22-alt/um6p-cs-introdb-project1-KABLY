mysql> create database gym;
Query OK, 1 row affected (0.01 sec)

mysql> use gym;
Database changed
mysql> CREATE TABLE Employee (
    ->
    ->     employee_id SMALLINT UNSIGNED AUTO_INCREMENT,
    ->
    ->     name VARCHAR(20) NOT NULL ,
    ->
    ->     salary INT UNSIGNED,
    ->
    ->     contact VARCHAR(25),
    ->
    ->     first_day_work DATE,
    ->
    ->     PRIMARY KEY (employee_id)
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Customer (
    ->
    -> customer_id SMALLINT UNSIGNED,
    ->
    -> name VARCHAR (25) NOT NULL,
    ->
    -> registration_date DATE,
    ->
    -> birth_date DATE,
    ->
    -> contact VARCHAR(15) NOT NULL,
    ->
    -> PRIMARY KEY (customer_id)
    ->
    -> );-- birth_date DATE,5
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Membership (
    ->
    -> membership_id SMALLINT UNSIGNED AUTO_INCREMENT,
    ->
    -> number_person_involved SMALLINT UNSIGNED,
    ->
    -> duration SMALLINT UNSIGNED,
    ->
    -> PRIMARY KEY (membership_id )
    ->
    -> );-- number_person_involved SMALLINT UNSIGNED,  trigger > 5
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Space (
    ->
    ->     space_id SMALLINT UNSIGNED AUTO_INCREMENT,
    ->
    ->     state_of_space SMALLINT UNSIGNED CHECK (state_of_space >= 0 AND state_of_space <= 100),
    ->
    ->     last_check_date DATE ,
    ->
    ->     capacity SMALLINT UNSIGNED CHECK (capacity > 0),
    ->
    ->     PRIMARY KEY (space_id)
    ->
    -> ); --  last_check_date DATE , trigger date
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Office (
    ->
    ->     space_id SMALLINT UNSIGNED,
    ->
    ->     number_staff  SMALLINT UNSIGNED,
    ->
    ->     office_start_time TIME,
    ->
    ->     office_end_time TIME,
    ->
    ->     PRIMARY KEY (space_id),
    ->
    ->     FOREIGN KEY (space_id) REFERENCES Space(space_id)
    ->
    ->  ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Admin (
    ->
    ->  employee_id SMALLINT UNSIGNED,
    ->
    ->  space_id SMALLINT UNSIGNED,
    ->
    ->  FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
    ->
    -> ON DELETE CASCADE,
    ->
    -> FOREIGN KEY (space_id) REFERENCES Office(space_id)
    ->
    ->  ON DELETE RESTRICT
    ->
    -> );--if an employee is removed it will be removed from being an admin too , An office canâ€™t be removed if an admin is workining there
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Feedback (
    ->
    ->     feedback_id SMALLINT UNSIGNED AUTO_INCREMENT,
    ->
    ->     f_title VARCHAR(100),
    ->
    ->     f_text TEXT,
    ->
    ->     customer_id SMALLINT UNSIGNED,
    ->
    ->     admin_id SMALLINT UNSIGNED,
    ->
    ->     PRIMARY KEY (feedback_id),
    ->
    ->     FOREIGN KEY (admin_id) REFERENCES Admin(employee_id) ON DELETE SET NULL,
    ->
    ->     FOREIGN KEY (customer_id) REFERENCES Customer(customer_id) ON DELETE SET NULL
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE End_time_founder (
    ->
    ->  start_time TIME,
    ->
    ->  end_time TIME,
    ->
    ->  day VARCHAR (10),
    ->
    ->  PRIMARY KEY (start_time, day),
    ->
    -> CHECK (end_time > start_time)
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Min_age_founder (
    ->
    -> name VARCHAR (25),
    ->
    -> minimum_age SMALLINT UNSIGNED,
    ->
    -> PRIMARY KEY (name)
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Discipline (
    ->
    -> discipline_id SMALLINT UNSIGNED,
    ->
    -> price   SMALLINT UNSIGNED,
    ->
    -> name VARCHAR (25),
    ->
    -> PRIMARY KEY (discipline_id),
    ->
    -> FOREIGN KEY (name) REFERENCES Min_age_founder(name)
    ->
    -> ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Training_space  (
    ->
    -> space_id SMALLINT UNSIGNED,
    ->
    -> FOREIGN KEY (space_id) REFERENCES Space(space_id)
    ->
    ->  ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)


mysql> CREATE TABLE Session (
    ->     session_id SMALLINT UNSIGNED AUTO_INCREMENT,
    ->     start_time TIME,
    ->     day VARCHAR(10),
    ->     discipline_id SMALLINT UNSIGNED,
    ->     space_id SMALLINT UNSIGNED,
    ->     PRIMARY KEY (session_id, space_id),
    ->     FOREIGN KEY (start_time, day) REFERENCES End_time_founder(start_time, day) ON DELETE RESTRICT,
    ->     FOREIGN KEY (discipline_id) REFERENCES Discipline(discipline_id) ON DELETE CASCADE,
    ->     FOREIGN KEY (space_id) REFERENCES Training_space(space_id) ON DELETE CASCADE,
    ->     CONSTRAINT check_day_attribute CHECK (LOWER(day) IN ('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'))
    -> );
Query OK, 0 rows affected (0.02 sec)


mysql> CREATE TABLE Pricefounder (
    ->
    ->     lockers_available_for_rent SMALLINT UNSIGNED,
    ->
    ->     rent_price SMALLINT UNSIGNED,
    ->
    ->     PRIMARY KEY (lockers_available_for_rent)
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Lounge (
    ->
    -> space_id SMALLINT UNSIGNED,
    ->
    -> FOREIGN KEY (space_id) REFERENCES Space(space_id)
    ->
    ->  ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Locker_room (
    ->
    ->     space_id SMALLINT UNSIGNED,
    ->
    ->     total_rentable_lockers SMALLINT UNSIGNED,
    ->
    ->     lockers_available_for_rent SMALLINT UNSIGNED,
    ->
    ->     PRIMARY KEY (space_id),
    ->
    ->     CONSTRAINT locker_checker CHECK ( lockers_available_for_rent <= total_rentable_lockers),
    ->
    ->     FOREIGN KEY (lockers_available_for_rent) REFERENCES Pricefounder(lockers_available_for_rent),
    ->
    ->     FOREIGN KEY (space_id) REFERENCES Space(space_id)
    ->
    ->  ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Subscribed(
    ->
    ->  payment_id SMALLINT UNSIGNED,
    ->
    ->          type_of_payment ENUM ("cash","credit card","debit card","check"),
    ->
    ->          date_of_payment DATE,
    ->
    ->  customer_id SMALLINT UNSIGNED,
    ->
    ->  membership_id SMALLINT UNSIGNED,
    ->
    ->  PRIMARY KEY (customer_id),
    ->
    ->  FOREIGN KEY (membership_id) REFERENCES Membership(membership_id)
    ->
    ->          ON DELETE RESTRICT,
    ->
    ->  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)
    ->
    ->          ON DELETE CASCADE
    ->
    ->     ) ;
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Technician (
    ->
    ->  employee_id SMALLINT UNSIGNED,
    ->
    ->  FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
    ->
    ->          ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Trainer (
    ->
    ->  employee_id SMALLINT UNSIGNED,
    ->
    ->  FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
    ->
    ->          ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Equipment_type_brand (
    ->
    ->     e_type VARCHAR (255),
    ->
    ->     brand VARCHAR(255),
    ->
    ->     check_interval_days INT,
    ->
    ->     PRIMARY KEY (e_type, brand)
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Equipment_barcode (
    ->
    ->     barcode INT,
    ->
    ->     e_type VARCHAR (255),
    ->
    ->     brand VARCHAR(255),
    ->
    ->     PRIMARY KEY (barcode),
    ->
    ->     FOREIGN KEY (e_type, brand) REFERENCES Equipment_type_brand(e_type, brand) ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Equipment_details (
    ->
    ->     barcode INT,
    ->
    ->     equipment_id INT,
    ->
    ->     last_check_date DATE,
    ->
    ->     PRIMARY KEY (barcode, equipment_id),
    ->
    ->     FOREIGN KEY (barcode) REFERENCES Equipment_barcode(barcode) ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Has (
    ->
    -> discipline_id SMALLINT UNSIGNED,
    ->
    -> membership_id SMALLINT UNSIGNED,
    ->
    -> PRIMARY KEY (discipline_id, membership_id),
    ->
    -> FOREIGN KEY (discipline_id) REFERENCES Discipline(discipline_id)
    ->
    -> ON DELETE CASCADE,
    ->
    -> FOREIGN KEY (membership_id) REFERENCES Membership(membership_id)
    ->
    -> ON DELETE CASCADE) ;
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Experts_in (
    ->
    ->     employee_id  SMALLINT UNSIGNED,
    ->
    ->     discipline_id  SMALLINT UNSIGNED,
    ->
    ->     PRIMARY KEY (employee_id, discipline_id),
    ->
    ->     FOREIGN KEY (employee_id) REFERENCES Trainer (employee_id)
    ->
    -> ON DELETE CASCADE,
    ->
    ->     FOREIGN KEY (discipline_id) REFERENCES Discipline (discipline_id)
    ->
    ->  ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Checks (
    ->
    ->     technician_id SMALLINT UNSIGNED,
    ->
    ->     space_id SMALLINT UNSIGNED,
    ->
    ->     FOREIGN KEY (technician_id) REFERENCES Technician(employee_id) ON DELETE CASCADE,
    ->
    ->     FOREIGN KEY (space_id) REFERENCES Space(space_id) ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Maintains (
    ->     technician_id SMALLINT UNSIGNED,
    ->     barcode INT,
    ->     equipment_id INT,
    ->     FOREIGN KEY (technician_id) REFERENCES Technician(employee_id) ON DELETE CASCADE,
    ->     FOREIGN KEY (barcode, equipment_id) REFERENCES Equipment_details(barcode, equipment_id) ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Rents(
    ->
    ->     customer_id SMALLINT UNSIGNED,
    ->
    ->     locker_id SMALLINT UNSIGNED,
    ->
    ->     space_id SMALLINT UNSIGNED,
    ->
    ->     PRIMARY KEY (locker_id, space_id),
    ->
    ->     FOREIGN KEY (customer_id) REFERENCES Customer(customer_id) ON DELETE CASCADE,
    ->
    ->     FOREIGN KEY (space_id) REFERENCES Space(space_id) ON DELETE CASCADE
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TRIGGER enforce_max_people_membership
    ->
    -> BEFORE INSERT ON Subscribed
    ->
    -> FOR EACH ROW
    ->
    -> BEGIN
    ->
    ->     DECLARE current_people_count INT;
    ->
    ->
    ->
    ->     -- Count the current number of people in the membership
    ->
    ->     SELECT COUNT(*) INTO current_people_count
    ->
    ->     FROM Subscribed
    ->
    ->     WHERE membership_id = NEW.membership_id;
    ->
    ->
    ->
    ->     IF current_people_count >= 5 THEN
    ->
    ->         SIGNAL SQLSTATE '45000'
    ->
    ->         SET MESSAGE_TEXT = 'Error: Maximum 5 people allowed in a membership';
    ->
    ->     END IF;
    ->
    -> END;
    ->
    -> //
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE PROCEDURE prevent_future_dates_procedure(tablename VARCHAR(50), columnname VARCHAR(50))
    ->
    -> Begin
    ->
    ->     SET @query = CONCAT('
    '>
    '>         CREATE TRIGGER prevent_future_dates_', tablename, '
    '>
    '>         BEFORE INSERT ON ', tablename, '
    '>
    '>         For each row begin
    '>
    '>             If new.', Columnname, ' > CURDATE() THEN
    '>
    '>                 Signal sqlstate ''45000''
    '>
    '>                 SET MESSAGE_TEXT = ''future dates are not allowed for ', columnname, ''';
    '>
    '>             End if;
    '>
    '>         End;'
    ->
    ->     );
    ->
    ->
    ->
    ->     PREPARE stmt FROM @query;
    ->
    ->     EXECUTE stmt;
    ->
    ->     DEALLOCATE PREPARE stmt;
    ->
    -> End //
Query OK, 0 rows affected (0.00 sec)

mysql> CALL prevent_future_dates_procedure('customer', 'birthdate');
    ->
    -> CALL prevent_future_dates_procedure('employee', 'hiredate');
    ->
    -> CALL prevent_future_dates_procedure('membership', 'start_date');
    -> ^C

mysql> CREATE INDEX idx_session_start_time_day
    ->
    -> ON Session (start_time, day);
    ->
    -> CREATE INDEX idx_customer_lex_order
    ->
    -> ON Customer (name);
    ->
    -> CREATE INDEX idx_employee_lex_order
    ->
    -> ON Employee (name);
    -> ^C

mysql> show tables;
+----------------------+
| Tables_in_gym        |
+----------------------+
| admin                |
| checks               |
| customer             |
| discipline           |
| employee             |
| end_time_founder     |
| equipment_barcode    |
| equipment_details    |
| equipment_type_brand |
| experts_in           |
| feedback             |
| has                  |
| locker_room          |
| lounge               |
| maintains            |
| membership           |
| min_age_founder      |
| office               |
| pricefounder         |
| rents                |
| session              |
| space                |
| subscribed           |
| technician           |
| trainer              |
| training_space       |
+----------------------+
26 rows in set (0.00 sec)
